// <auto-generated />
using System;
using BE;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BE.Infrastructure.Migrations
{
    [DbContext(typeof(TaltikoContext))]
    partial class TaltikoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BE.Domain.Diaries.Diary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Diary", (string)null);
                });

            modelBuilder.Entity("BE.Domain.Diaries.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiaryId")
                        .HasColumnType("int");

                    b.Property<int>("Mood")
                        .HasColumnType("int")
                        .HasColumnName("MoodCode");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DiaryId");

                    b.ToTable("Entry", (string)null);
                });

            modelBuilder.Entity("BE.Domain.Diaries.Entry", b =>
                {
                    b.HasOne("BE.Domain.Diaries.Diary", null)
                        .WithMany("Entries")
                        .HasForeignKey("DiaryId");
                });

            modelBuilder.Entity("BE.Domain.Diaries.Diary", b =>
                {
                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
